{"version":3,"file":"use-async.dev.js","sources":["../../node_modules/@react-hook/latest/src/index.tsx","../../src/index.tsx"],"sourcesContent":["import * as React from 'react'\n\nconst useLatest = <T extends any>(current: T) => {\n  const storedValue = React.useRef(current)\n  storedValue.current = current\n  return storedValue\n}\n\nexport default useLatest\n","import * as React from 'react'\nimport useLatest from '@react-hook/latest'\n\nexport function useAsync<\n  ValueType extends any = any,\n  ErrorType extends any = Error,\n  Args extends any[] = any[]\n>(asyncCallback: (...args: Args) => Promise<ValueType>) {\n  const [state, dispatch] = React.useReducer<\n    React.Reducer<\n      AsyncReducerState<ValueType, ErrorType>,\n      AsyncAction<ValueType, ErrorType>\n    >,\n    undefined\n  >(\n    (prev, action) => ({\n      // This is the current status of the promise or async/await function. A\n      // promise or async/await can only be in one state at a time.\n      status: action.status,\n      // The value is persisted between 'success' statuses. This means I can\n      // still display things that depend on my current value while my new\n      // value is loading.\n      value: action.status === 'success' ? action.value : prev.value,\n      // Errors get reset each time we leave the error state. There's really\n      // no use in keeping those around. They go stale once we leave.\n      error: action.status === 'error' ? action.error : void 0,\n    }),\n    void 0,\n    () => {\n      return {\n        status: 'idle',\n        value: void 0,\n        error: void 0,\n      }\n    }\n  )\n  // Creates a stable callback that manages our loading/success/error status updates\n  // as the callback is invoked.\n  const storedCallback = useLatest(asyncCallback)\n\n  const [callback] = React.useState(() => {\n    const cancelled: Set<Promise<ValueType> | null> = new Set()\n    let previous: Promise<ValueType> | null\n\n    return Object.assign(\n      async (...args: Args) => {\n        // Reloading automatically cancels previous promises\n        cancelled.add(previous)\n        dispatch({status: 'loading'})\n        let current: Promise<ValueType> | null = null\n\n        try {\n          previous = current = storedCallback.current(...args)\n          const value = await current\n          !cancelled.has(current) && dispatch({status: 'success', value})\n        } catch (error) {\n          current &&\n            !cancelled.has(current) &&\n            dispatch({status: 'error', error})\n        } finally {\n          cancelled.delete(current)\n        }\n      },\n      {\n        cancel: () => {\n          cancelled.add(previous)\n        },\n      }\n    )\n  })\n\n  // Cancels any pending async callbacks when the hook unmounts\n  React.useEffect(() => callback.cancel, [callback])\n\n  return [\n    React.useMemo(() => {\n      return {\n        status: state.status,\n        value: state.value,\n        error: state.error,\n        cancel: () => {\n          // Prevent the callback from dispatching\n          callback.cancel()\n          // Create a new callback and set status to cancelled\n          dispatch({status: 'cancelled'})\n        },\n      }\n    }, [callback, state]),\n    callback,\n  ] as const\n}\n\nexport function useAsyncEffect<\n  ValueType extends any = any,\n  ErrorType extends any = Error\n>(\n  asyncCallback: () => Promise<ValueType>,\n  dependencies?: React.DependencyList\n) {\n  const [state, callback] = useAsync<ValueType, ErrorType>(asyncCallback)\n  // Runs the callback each time deps change\n  React.useEffect(() => {\n    callback()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies)\n\n  return state\n}\n\nexport interface AsyncReducerState<ValueType, ErrorType> {\n  status: AsyncStatus\n  value?: ValueType\n  error?: ErrorType\n}\n\nexport type AsyncAction<ValueType, ErrorType> =\n  | {\n      status: 'idle' | 'loading' | 'cancelled'\n    }\n  | {\n      status: 'success'\n      value: ValueType\n    }\n  | {\n      status: 'error'\n      error?: ErrorType\n    }\n\nexport type AsyncStatus = 'idle' | 'loading' | 'success' | 'error' | 'cancelled'\n"],"names":["useLatest","current","storedValue","React","prev","action","status","value","error","useAsync","asyncCallback","state","dispatch","storedCallback","cancelled","Set","previous","add","has","delete","cancel","callback","useAsyncEffect","dependencies"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAEA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAAgBC,OAAhB,EAA+B;EAC/C,MAAMC,WAAW,GAAGC,YAAA,CAAaF,OAAb,CAApB;EACAC,EAAAA,WAAW,CAACD,OAAZ,GAAsBA,OAAtB;EACA,SAAOC,WAAP;EACD,CAJD;;ECaI,cAACE,IAAD,EAAOC,MAAP;EAAA,SAAmB;EACjB;EACA;EACAC,IAAAA,MAAM,EAAED,MAAM,CAACC,MAHE;EAIjB;EACA;EACA;EACAC,IAAAA,KAAK,EAAEF,MAAM,CAACC,MAAP,KAAkB,SAAlB,GAA8BD,MAAM,CAACE,KAArC,GAA6CH,IAAI,CAACG,KAPxC;EAQjB;EACA;EACAC,IAAAA,KAAK,EAAEH,MAAM,CAACC,MAAP,KAAkB,OAAlB,GAA4BD,MAAM,CAACG,KAAnC,GAA2C,KAAK;EAVtC,GAAnB;EAAA;;EAaA,iBAAM;EACJ,SAAO;EACLF,IAAAA,MAAM,EAAE,MADH;EAELC,IAAAA,KAAK,EAAE,KAAK,CAFP;EAGLC,IAAAA,KAAK,EAAE,KAAK;EAHP,GAAP;EAKD;;EA/BE,SAASC,QAAT,CAILC,aAJK,EAIiD;EAAA,0BAC5BP,gBAAA,OAmBxB,KAAK,CAnBmB,QAD4B;EAAA,MAC/CQ,KAD+C;EAAA,MACxCC,QADwC;EA8BtD;;;EACA,MAAMC,cAAc,GAAGb,SAAS,CAACU,aAAD,CAAhC;;EA/BsD,wBAiCnCP,cAAA,CAAe,YAAM;EACtC,QAAMW,SAAyC,GAAG,IAAIC,GAAJ,EAAlD;EACA,QAAIC,QAAJ;EAEA,WAAO,+EACL;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EACE;EACAF,cAAAA,SAAS,CAACG,GAAV,CAAcD,QAAd;EACAJ,cAAAA,QAAQ,CAAC;EAACN,gBAAAA,MAAM,EAAE;EAAT,eAAD,CAAR;EACIL,cAAAA,OAJN,GAI2C,IAJ3C;EAAA;EAOIe,cAAAA,QAAQ,GAAGf,OAAO,GAAGY,cAAc,CAACZ,OAAf,OAAAY,cAAc,QAAnC;EAPJ;EAAA,qBAQwBZ,OARxB;;EAAA;EAQUM,cAAAA,KARV;EASI,eAACO,SAAS,CAACI,GAAV,CAAcjB,OAAd,CAAD,IAA2BW,QAAQ,CAAC;EAACN,gBAAAA,MAAM,EAAE,SAAT;EAAoBC,gBAAAA,KAAK,EAALA;EAApB,eAAD,CAAnC;EATJ;EAAA;;EAAA;EAAA;EAAA;EAWIN,cAAAA,OAAO,IACL,CAACa,SAAS,CAACI,GAAV,CAAcjB,OAAd,CADH,IAEEW,QAAQ,CAAC;EAACN,gBAAAA,MAAM,EAAE,OAAT;EAAkBE,gBAAAA,KAAK;EAAvB,eAAD,CAFV;;EAXJ;EAAA;EAeIM,cAAAA,SAAS,CAACK,MAAV,CAAiBlB,OAAjB;EAfJ;;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA,KADK,IAmBL;EACEmB,MAAAA,MAAM,EAAE,kBAAM;EACZN,QAAAA,SAAS,CAACG,GAAV,CAAcD,QAAd;EACD;EAHH,KAnBK,CAAP;EAyBD,GA7BkB,CAjCmC;EAAA,MAiC/CK,QAjC+C;;;EAiEtDlB,EAAAA,eAAA,CAAgB;EAAA,WAAMkB,QAAQ,CAACD,MAAf;EAAA,GAAhB,EAAuC,CAACC,QAAD,CAAvC;;EAQc,qBAAM;EACZ;EACAA,IAAAA,QAAQ,CAACD,MAAT,GAFY;;EAIZR,IAAAA,QAAQ,CAAC;EAACN,MAAAA,MAAM,EAAE;EAAT,KAAD,CAAR;EACD;;EAXP,SAAO,CACLH,aAAA,CAAc,YAAM;EAClB,WAAO;EACLG,MAAAA,MAAM,EAAEK,KAAK,CAACL,MADT;EAELC,MAAAA,KAAK,EAAEI,KAAK,CAACJ,KAFR;EAGLC,MAAAA,KAAK,EAAEG,KAAK,CAACH,KAHR;EAILY,MAAAA,MAAM;EAJD,KAAP;EAWD,GAZD,EAYG,CAACC,QAAD,EAAWV,KAAX,CAZH,CADK,EAcLU,QAdK,CAAP;EAgBD;EAEM,SAASC,cAAT,CAILZ,aAJK,EAKLa,YALK,EAML;EAAA,kBAC0Bd,QAAQ,CAAuBC,aAAvB,CADlC;EAAA,MACOC,KADP;EAAA,MACcU,QADd;;;EAGAlB,EAAAA,eAAA,CAAgB,YAAM;EACpBkB,IAAAA,QAAQ,GADY;EAGrB,GAHD,EAGGE,YAHH;EAKA,SAAOZ,KAAP;EACD;;;;;;;;;;;;;"}